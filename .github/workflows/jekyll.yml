# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # - name: Setup Ruby
      #   uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
      #   with:
      #     bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      #     cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Set ruby
        id: ruby
        run: |
        ruby=1.161.0
        if [[ "$ruby" == [0-9]* ]]; then
          ruby="ruby-$ruby"
        fi
        echo "ruby=$ruby" >> $GITHUB_OUTPUT
        echo "archive=$ruby-${{ steps.platform.outputs.platform }}.tar.gz" >> $GITHUB_OUTPUT
      - name: Check if already built
        run: '! curl -s -L --head --fail https://github.com/ruby/ruby-builder/releases/download/${{ steps.info.outputs.tag }}/${{ steps.ruby.outputs.archive }}'
      - name: Set NO_DOCUMENT
        run: |
          if [[ "${{ steps.ruby.outputs.ruby }}" == ruby-1.9* ]]; then
            echo "NO_DOCUMENT=--no-ri --no-rdoc" >> $GITHUB_ENV
          else
            echo "NO_DOCUMENT=--no-document" >> $GITHUB_ENV
          fi
      - name: Clone ruby-build
        run: git clone https://github.com/rbenv/ruby-build.git
      - name: Install ruby-build
        run: sudo ./ruby-build/install.sh
      - name: List versions
        run: ruby-build --definitions
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
